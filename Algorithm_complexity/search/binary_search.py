def binary_search(arr, target):
    """
    Функция бинарного поиска.

    Parameters:
        arr (list): Упорядоченный список.
        target: Искомый элемент.

    Returns:
        int: Индекс искомого элемента в списке или -1, если элемент не найден.
    """
    # Установка начальных значений левой и правой границ диапазона
    left = 0
    right = len(arr) - 1

    # Пока левая граница меньше или равна правой границе, выполняем поиск
    while left <= right:
        # Вычисление индекса среднего элемента
        mid = (left + right) // 2

        # Сравнение элемента с индексом mid с искомым элементом
        if arr[mid] == target:
            # Если элемент найден, возвращаем индекс mid
            return mid
        elif arr[mid] < target:
            # Если элемент с индексом mid меньше искомого, обновляем левую границу
            left = mid + 1
        else:
            # Если элемент с индексом mid больше искомого, обновляем правую границу
            right = mid - 1

    # Если элемент не найден, возвращаем -1
    return -1

if __name__ == "__main__":
    # Пример упорядоченного списка
    arr = [2, 4, 6, 8, 10, 12, 14]

    # Искомый элемент
    target = 10

    # Вызов функции бинарного поиска
    result = binary_search(arr, target)

    if result != -1:
        print(f"Искомый элемент {target} найден в списке на позиции {result}.")
    else:
        print(f"Искомый элемент {target} не найден в списке.")
